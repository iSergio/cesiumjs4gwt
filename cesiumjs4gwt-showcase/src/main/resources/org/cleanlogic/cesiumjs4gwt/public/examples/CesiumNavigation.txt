package org.cleanlogic.cesiumjs4gwt.showcase.examples;

import com.google.gwt.core.client.GWT;
import com.google.gwt.user.client.ui.HTML;
import org.cesiumjs.cs.core.Rectangle;
import org.cesiumjs.cs.widgets.ViewerPanel;
import org.cesiumjs.cs.widgets.options.ViewerCesiumNavigationMixinOptions;
import org.cesiumjs.cs.widgets.viewerCesiumNavigationMixin;
import org.cleanlogic.cesiumjs4gwt.showcase.basic.AbstractExample;
import org.cleanlogic.cesiumjs4gwt.showcase.components.store.ShowcaseExampleStore;

import javax.inject.Inject;

/**
 * @author Serge Silaev aka iSergio <s.serge.b@gmail.com>
 */
public class CesiumNavigation extends AbstractExample {
    @Inject
    public CesiumNavigation(ShowcaseExampleStore store) {
        super("Cesium Navigation", "Use CesiumNavigation plugin with GWT wrapper.", new String[]{"Showcase", "Cesium", "3d", "Viewer", "Navigation"}, store);
    }

    @Override
    public void buildPanel() {
        ViewerCesiumNavigationMixinOptions options = new ViewerCesiumNavigationMixinOptions();
        options.defaultResetView = Rectangle.fromDegrees(71, 3, 90, 14);
        options.enableCompass = true;
        options.enableZoomControls = false;
        options.enableDistanceLegend = false;
        options.enableCompassOuterRing = true;

        ViewerPanel csVPanel = new ViewerPanel();
        csVPanel.getViewer().extend(viewerCesiumNavigationMixin.instance(), options);

        contentPanel.add(new HTML("<p>Use CesiumNavigation plugin with GWT wrapper.</p>"));
        contentPanel.add(csVPanel);

        initWidget(contentPanel);
    }

    @Override
    public String[] getSourceCodeURLs() {
        String[] sourceCodeURLs = new String[1];
        sourceCodeURLs[0] = GWT.getModuleBaseURL() + "examples/" + "CesiumNavigation.txt";
        return sourceCodeURLs;
    }
}
